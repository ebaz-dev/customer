"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cart = exports.CartStatus = void 0;
const mongoose_1 = require("mongoose");
const mongoose_update_if_current_1 = require("mongoose-update-if-current");
var CartStatus;
(function (CartStatus) {
    CartStatus["Created"] = "created";
    CartStatus["Pending"] = "pending";
    CartStatus["Returned"] = "returned";
    CartStatus["Ordered"] = "ordered";
    CartStatus["Cancelled"] = "cancelled";
})(CartStatus || (exports.CartStatus = CartStatus = {}));
const cartProductSchema = new mongoose_1.Schema({
    id: {
        type: mongoose_1.Schema.Types.ObjectId,
        required: true,
        ref: "Product",
    },
    quantity: {
        type: Number,
        required: true,
    },
}, { _id: false });
const cartSchema = new mongoose_1.Schema({
    status: { type: String, enum: Object.values(CartStatus), required: true },
    supplierId: {
        type: mongoose_1.Schema.Types.ObjectId,
        required: true,
        ref: "Customer",
    },
    merchantId: {
        type: mongoose_1.Schema.Types.ObjectId,
        required: true,
        ref: "Customer",
    },
    userId: {
        type: mongoose_1.Schema.Types.ObjectId,
        required: false,
        ref: "User",
    },
    products: [cartProductSchema],
    orderedAt: Date,
    deliveryDate: Date,
    returnedProducts: [String]
}, {
    timestamps: true,
    toJSON: {
        transform(doc, ret) {
            ret.id = ret._id;
            delete ret._id;
        },
    },
});
cartSchema.set("versionKey", "version");
cartSchema.plugin(mongoose_update_if_current_1.updateIfCurrentPlugin);
const Cart = (0, mongoose_1.model)("Cart", cartSchema);
exports.Cart = Cart;
