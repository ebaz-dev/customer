import { Document, Types } from "mongoose";
export declare enum OrderStatus {
    Created = "created",
    Pending = "pending",
    Confirmed = "confirmed",
    Delivered = "delivered",
    Cancelled = "cancelled"
}
export declare enum PaymentMethods {
    Cash = "cash",
    QPay = "qpay",
    MBank = "mbank"
}
export declare enum OrderLogType {
    Status = "status",
    Payment = "payment",
    Supplier = "supplier"
}
export declare enum OrderActions {
    Create = "create",
    Update = "update",
    Confirm = "confirm",
    Deliver = "deliver",
    Cancel = "cancel"
}
interface OrderProductDoc extends Document {
    id: Types.ObjectId;
    name: string;
    description?: string;
    images?: string[];
    price: number;
    basePrice?: number;
    quantity: number;
    giftQuantity?: number;
    inCase?: number;
    thirdPartyData: {
        customerId: Types.ObjectId;
        productId: number;
    }[];
    promoId?: number;
    totalPrice?: number;
}
interface OrderLogDoc extends Document {
    userId?: Types.ObjectId;
    type: OrderLogType;
    action: OrderActions;
    fields: {
        key: string;
        oldValue: string;
        newValue: string;
    }[];
    description?: string;
}
interface OrderThirdPartyDataDoc extends Document {
    thirdPartyId: string;
    updatedAt: Date;
    response: any[];
}
interface OrderDoc extends Document {
    orderNo?: string;
    status: OrderStatus;
    supplierId: Types.ObjectId;
    merchantId: Types.ObjectId;
    userId: Types.ObjectId;
    cartId: Types.ObjectId;
    products: OrderProductDoc[];
    giftProducts: OrderProductDoc[];
    orderedAt: Date;
    deliveryDate: Date;
    deliveredAt: Date;
    paymentMethod: PaymentMethods;
    thirdPartyId: string;
    merchantDebt: number;
    logs: OrderLogDoc[];
    thirdPartyData: OrderThirdPartyDataDoc;
    totalPrice?: number;
}
declare const Order: import("mongoose").Model<OrderDoc, {}, {}, {}, Document<unknown, {}, OrderDoc> & OrderDoc & Required<{
    _id: unknown;
}> & {
    __v?: number;
}, any>;
export { OrderDoc, Order, OrderProductDoc, OrderLogDoc, OrderThirdPartyDataDoc, };
